
#ifndef FONTS_H
#define FONTS_H

#include <stdint.h>

// fonts definitions
#define FONT_LENGTH             0
#define FONT_FIXED_WIDTH        2
#define FONT_HEIGHT             3
#define FONT_FIRST_CHAR         4
#define FONT_CHAR_COUNT         5
#define FONT_WIDTH_TABLE        6
#define FONT_INTERCHAR_SPACE    1
#define FONT_DEFAULT            Terminal5x7

// fonts macros
#define FONT_IS_MONO_SPACED(font)   ((font)[FONT_LENGTH] == 0 && (font)[FONT_LENGTH+1] == 0)

//TODO REMOVE THIS FONT ONCE WE HAVE A NEW TUNER DESIGN
/*
 *
 * alterebro24
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : alterebro24.h
 * Date                : 21.03.2013
 * Font size in bytes  : 7811
 * Font width          : 10
 * Font height         : 15
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 95
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#define ALTEREBRO24_WIDTH 10
#define ALTEREBRO24_HEIGHT 15

static const uint8_t alterebro24[] = {
    0x1E, 0x83, // size
    0x0A, // width
    0x0F, // height
    0x20, // first char
    0x5F, // char count

    // char widths
    0x03, 0x02, 0x05, 0x08, 0x08, 0x0B, 0x08, 0x02, 0x03, 0x03,
    0x05, 0x08, 0x02, 0x05, 0x02, 0x06, 0x06, 0x03, 0x06, 0x06,
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x02, 0x02, 0x05, 0x05,
    0x05, 0x08, 0x09, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
    0x06, 0x02, 0x06, 0x06, 0x05, 0x08, 0x06, 0x06, 0x06, 0x06,
    0x06, 0x06, 0x08, 0x06, 0x06, 0x08, 0x06, 0x08, 0x06, 0x03,
    0x06, 0x03, 0x05, 0x05, 0x02, 0x06, 0x06, 0x06, 0x06, 0x06,
    0x05, 0x06, 0x06, 0x02, 0x03, 0x05, 0x02, 0x08, 0x06, 0x06,
    0x06, 0x06, 0x05, 0x06, 0x05, 0x06, 0x06, 0x08, 0x06, 0x06,
    0x06, 0x05, 0x02, 0x05, 0x03,

    // font data
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 32
    0xFE, 0xFE, 0x1A, 0x1A, // 33
    0x1E, 0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, // 34
    0xB0, 0xF8, 0xF8, 0xB0, 0xF8, 0xF8, 0xB0, 0xB0, 0x02, 0x0E, 0x0E, 0x02, 0x0E, 0x0E, 0x02, 0x02, // 35
    0x38, 0xFE, 0xC6, 0xFF, 0xFF, 0xC6, 0x86, 0x86, 0x18, 0x18, 0x18, 0x7E, 0x7E, 0x18, 0x0E, 0x0E, // 36
    0x18, 0x3E, 0x36, 0x98, 0xD8, 0xC0, 0x30, 0xB8, 0x98, 0x06, 0x06, 0x18, 0x1C, 0x0C, 0x02, 0x02, 0x00, 0x0C, 0x1E, 0x1A, 0x0C, 0x0C, // 37
    0xB8, 0xFE, 0xC6, 0xB6, 0xBE, 0x18, 0xC0, 0xC0, 0x0E, 0x1E, 0x18, 0x1A, 0x1E, 0x0C, 0x1A, 0x1A, // 38
    0x1E, 0x1E, 0x00, 0x00, // 39
    0xFE, 0xFF, 0x03, 0x1E, 0x7E, 0x60, // 40
    0x03, 0xFF, 0xFE, 0x60, 0x7E, 0x1E, // 41
    0x36, 0x3E, 0x18, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, // 42
    0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x00, 0x00, 0x00, // 43
    0x00, 0x00, 0x78, 0x78, // 44
    0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0x18, 0x18, // 46
    0x00, 0xC0, 0xC0, 0x38, 0x3E, 0x06, 0x1C, 0x1E, 0x02, 0x00, 0x00, 0x00, // 47
    0xF8, 0xFE, 0x06, 0x06, 0xFE, 0xF8, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 48
    0x18, 0xFE, 0xFE, 0x00, 0x1E, 0x1E, // 49
    0x18, 0x9E, 0x86, 0xC6, 0xFE, 0x38, 0x1C, 0x1E, 0x1A, 0x18, 0x18, 0x18, // 50
    0x06, 0xC6, 0xC6, 0xC6, 0xFE, 0xBE, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x0E, // 51
    0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, // 52
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0x86, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x0E, // 53
    0xF8, 0xFE, 0xC6, 0xC6, 0xC6, 0x80, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 54
    0x06, 0x86, 0x86, 0xC6, 0xFE, 0x3E, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, // 55
    0xB8, 0xFE, 0xC6, 0xC6, 0xFE, 0xB8, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 56
    0x38, 0xFE, 0xC6, 0xC6, 0xFE, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x0E, // 57
    0x80, 0x80, 0x1A, 0x1A, // 58
    0x80, 0x80, 0x7A, 0x7A, // 59
    0x80, 0xC0, 0xC0, 0x30, 0x30, 0x02, 0x0E, 0x0C, 0x18, 0x18, // 60
    0xB0, 0xB0, 0xB0, 0xB0, 0xB0, 0x02, 0x02, 0x02, 0x02, 0x02, // 61
    0x30, 0xF0, 0xC0, 0x80, 0x80, 0x18, 0x1C, 0x0C, 0x02, 0x02, // 62
    0x18, 0x1E, 0x06, 0x86, 0xC6, 0xC6, 0x38, 0x38, 0x00, 0x00, 0x00, 0x1A, 0x1A, 0x00, 0x00, 0x00, // 63
    0xF8, 0xFE, 0x06, 0xF6, 0xF6, 0xB6, 0x86, 0xFE, 0xF8, 0x0E, 0x1E, 0x18, 0x1A, 0x1A, 0x1A, 0x1A, 0x1A, 0x02, // 64
    0xF8, 0xFE, 0xC6, 0xC6, 0xFE, 0xFE, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 65
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0xB8, 0x1E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 66
    0xF8, 0xFE, 0x06, 0x06, 0x06, 0x06, 0x0E, 0x1E, 0x18, 0x18, 0x18, 0x18, // 67
    0xFE, 0xFE, 0x06, 0x06, 0xFE, 0xF8, 0x1E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 68
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0x06, 0x1E, 0x1E, 0x18, 0x18, 0x18, 0x18, // 69
    0xFE, 0xFE, 0xC6, 0xC6, 0xC6, 0x06, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, // 70
    0xF8, 0xFE, 0x06, 0x06, 0xC6, 0xC6, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x1E, // 71
    0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xFE, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 72
    0xFE, 0xFE, 0x1E, 0x1E, // 73
    0x80, 0x80, 0x00, 0x00, 0xFE, 0xFE, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 74
    0xFE, 0xFE, 0xC0, 0xC0, 0xFE, 0xBE, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 75
    0xFE, 0xFE, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x18, 0x18, 0x18, // 76
    0xFE, 0xFE, 0x18, 0x30, 0x38, 0x18, 0xFE, 0xFE, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, // 77
    0xFE, 0xFE, 0x30, 0xC0, 0xFE, 0xFE, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 78
    0xF8, 0xFE, 0x06, 0x06, 0xFE, 0xF8, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 79
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0x38, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, // 80
    0xF8, 0xFE, 0x06, 0x06, 0xFE, 0xF8, 0x0E, 0x1E, 0x18, 0x1C, 0x1E, 0x1E, // 81
    0xFE, 0xFE, 0xC6, 0xC6, 0xFE, 0xB8, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 82
    0x38, 0xFE, 0xC6, 0xC6, 0xC6, 0x86, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x0E, // 83
    0x06, 0x06, 0x06, 0xFE, 0xFE, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, // 84
    0xFE, 0xFE, 0x00, 0x00, 0xFE, 0xFE, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 85
    0xFE, 0xFE, 0x00, 0x00, 0xFE, 0xFE, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x1E, // 86
    0xFE, 0xFE, 0x00, 0xF0, 0xF0, 0x00, 0xFE, 0xFE, 0x0E, 0x1E, 0x18, 0x0E, 0x1E, 0x18, 0x0E, 0x0E, // 87
    0xBE, 0xFE, 0xC0, 0xC0, 0xFE, 0xBE, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 88
    0x1E, 0x3E, 0x30, 0xC0, 0xF0, 0x30, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, // 89
    0x86, 0xC6, 0xC6, 0x36, 0x3E, 0x1E, 0x1E, 0x1E, 0x18, 0x18, 0x18, 0x18, // 90
    0xFF, 0xFF, 0x03, 0x7E, 0x7E, 0x60, // 91
    0x06, 0x3E, 0x38, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x1E, 0x1C, // 92
    0x03, 0xFF, 0xFF, 0x60, 0x7E, 0x7E, // 93
    0x18, 0x1E, 0x06, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, // 94
    0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, // 95
    0x1E, 0x1E, 0x00, 0x00, // 96
    0x00, 0xB0, 0xB0, 0xB0, 0xF0, 0xC0, 0x0C, 0x1E, 0x1A, 0x1A, 0x1E, 0x1E, // 97
    0xFE, 0xFE, 0x30, 0x30, 0xF0, 0xC0, 0x1E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 98
    0xC0, 0xF0, 0x30, 0x30, 0x30, 0x30, 0x0E, 0x1E, 0x18, 0x18, 0x18, 0x18, // 99
    0xC0, 0xF0, 0x30, 0x30, 0xFE, 0xFE, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x1E, // 100
    0xC0, 0xF0, 0xB0, 0xB0, 0xF0, 0xC0, 0x0E, 0x1E, 0x1A, 0x1A, 0x1A, 0x1A, // 101
    0xF8, 0xFE, 0xC6, 0x06, 0x06, 0x1E, 0x1E, 0x00, 0x00, 0x00, // 102
    0xC0, 0xF0, 0x30, 0x30, 0xF0, 0xC0, 0xCE, 0xDE, 0xD8, 0xD8, 0xFE, 0x7E, // 103
    0xFE, 0xFE, 0x30, 0x30, 0xF0, 0xC0, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 104
    0xF6, 0xF6, 0x1E, 0x1E, // 105
    0x00, 0xF6, 0xF6, 0xC0, 0xFE, 0x7E, // 106
    0xFE, 0xFE, 0x80, 0xF0, 0xF0, 0x1E, 0x1E, 0x02, 0x1C, 0x1C, // 107
    0xFE, 0xFE, 0x1E, 0x1E, // 108
    0xF0, 0xF0, 0x30, 0xF0, 0xF0, 0x30, 0xC0, 0xC0, 0x1E, 0x1E, 0x00, 0x1E, 0x1E, 0x00, 0x1E, 0x1E, // 109
    0xF0, 0xF0, 0x30, 0x30, 0xF0, 0xC0, 0x1E, 0x1E, 0x00, 0x00, 0x1E, 0x1E, // 110
    0xC0, 0xF0, 0x30, 0x30, 0xF0, 0xC0, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x0E, // 111
    0xF0, 0xF0, 0x30, 0x30, 0xF0, 0xC0, 0xFE, 0xFE, 0x18, 0x18, 0x1E, 0x0E, // 112
    0xC0, 0xF0, 0x30, 0x30, 0xF0, 0xF0, 0x0E, 0x1E, 0x18, 0x18, 0xFE, 0xFE, // 113
    0xC0, 0xF0, 0x30, 0x30, 0x30, 0x1E, 0x1E, 0x00, 0x00, 0x00, // 114
    0xC0, 0xF0, 0xB0, 0xB0, 0xB0, 0x30, 0x18, 0x1A, 0x1A, 0x1A, 0x1E, 0x0C, // 115
    0xFE, 0xFE, 0x30, 0x00, 0x00, 0x0E, 0x1E, 0x18, 0x18, 0x18, // 116
    0xF0, 0xF0, 0x00, 0x00, 0xF0, 0xF0, 0x0E, 0x1E, 0x18, 0x18, 0x1E, 0x1E, // 117
    0xF0, 0xF0, 0x00, 0x00, 0xF0, 0xF0, 0x02, 0x0E, 0x0C, 0x18, 0x1E, 0x1E, // 118
    0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x0E, 0x1E, 0x18, 0x0C, 0x1C, 0x18, 0x0E, 0x0E, // 119
    0xF0, 0xF0, 0x80, 0x80, 0xF0, 0xF0, 0x1C, 0x1E, 0x02, 0x02, 0x1E, 0x1C, // 120
    0xF0, 0xF0, 0x00, 0x00, 0xF0, 0xF0, 0xCE, 0xDE, 0xD8, 0xD8, 0xFE, 0x7E, // 121
    0x30, 0xB0, 0xB0, 0xB0, 0xF0, 0xF0, 0x1C, 0x1E, 0x1A, 0x1A, 0x1A, 0x18, // 122
    0xC0, 0xFE, 0xBE, 0x03, 0x03, 0x00, 0x1E, 0x1E, 0x60, 0x60, // 123
    0xFE, 0xFE, 0x1E, 0x1E, // 124
    0x03, 0xBF, 0xBE, 0xC0, 0xC0, 0x60, 0x7E, 0x1E, 0x00, 0x00, // 125
    0x06, 0x06, 0x06, 0x00, 0x00, 0x00 // 126
};

//TODO REMOVE THIS FONT ONCE WE HAVE A NEW TUNER DESIGN
/*
 *
 * alterebro49
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : alterebro49.h
 * Date                : 06.08.2013
 * Font size in bytes  : 29861
 * Font width          : 10
 * Font height         : 30
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 95
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#define ALTEREBRO49_WIDTH 10
#define ALTEREBRO49_HEIGHT 30

static const uint8_t alterebro49[] = {
    0x74, 0xA5, // size
    0x0A, // width
    0x1E, // height
    0x20, // first char
    0x5F, // char count

    // char widths
    0x00, 0x03, 0x09, 0x0F, 0x0F, 0x15, 0x0F, 0x03, 0x06, 0x06,
    0x09, 0x0F, 0x03, 0x09, 0x03, 0x0C, 0x0C, 0x06, 0x0C, 0x0C,
    0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x03, 0x03, 0x09, 0x09,
    0x09, 0x0F, 0x12, 0x0C, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0C,
    0x0C, 0x03, 0x0C, 0x0C, 0x09, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C,
    0x0C, 0x0C, 0x0F, 0x0C, 0x0C, 0x0F, 0x0C, 0x0F, 0x0C, 0x06,
    0x0C, 0x06, 0x09, 0x09, 0x03, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
    0x09, 0x0C, 0x0C, 0x03, 0x06, 0x09, 0x03, 0x0F, 0x0C, 0x0C,
    0x0C, 0x0C, 0x09, 0x0C, 0x09, 0x0C, 0x0C, 0x0F, 0x0C, 0x0C,
    0x0C, 0x09, 0x03, 0x09, 0x06,

    // font data
    0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, // 33
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 34
    0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x8E, 0x8E, 0x8E, 0xFF, 0xFF, 0xFF, 0x8E, 0x8E, 0x8E, 0xFF, 0xFF, 0xFF, 0x8E, 0x8E, 0x8E, 0x03, 0x03, 0x03, 0x1F, 0x1F, 0x1F, 0x03, 0x03, 0x03, 0x1F, 0x1F, 0x1F, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 35
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x0F, 0x0F, 0x0F, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 36
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x01, 0x01, 0x01, 0x0E, 0x0E, 0x0E, 0x81, 0x81, 0x81, 0x70, 0x70, 0x70, 0x0E, 0x0E, 0x0E, 0x81, 0x81, 0x81, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0xE3, 0xE3, 0xE3, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 37
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x8F, 0x8F, 0x8F, 0x70, 0x70, 0x70, 0x8E, 0x8E, 0x8E, 0x01, 0x01, 0x01, 0xF0, 0xF0, 0xF0, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0x1C, 0x1C, 0x1C, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 38
    0xF8, 0xF8, 0xF8, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 39
    0xF8, 0xF8, 0xF8, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, // 40
    0x07, 0x07, 0x07, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, // 41
    0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x0E, 0x0E, 0x0E, 0x01, 0x01, 0x01, 0x0E, 0x0E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 42
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 43
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, // 44
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, // 46
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFC, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 47
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 48
    0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xF8, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 49
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x01, 0x01, 0x01, 0x80, 0x80, 0x80, 0x70, 0x70, 0x70, 0x0F, 0x0F, 0x0F, 0xFC, 0xFC, 0xFC, 0xE3, 0xE3, 0xE3, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 50
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 51
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 52
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x7F, 0x7F, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 53
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x80, 0x80, 0x80, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 54
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x70, 0x70, 0x70, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x8F, 0x8F, 0x8F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 56
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x0F, 0x0F, 0x0F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 57
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, // 58
    0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xE3, 0xE3, 0xE3, 0x1C, 0x1C, 0x1C, // 59
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x70, 0x70, 0x70, 0x0E, 0x0E, 0x0E, 0x03, 0x03, 0x03, 0x1C, 0x1C, 0x1C, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 60
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 61
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x70, 0x70, 0x70, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 62
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x70, 0x70, 0x70, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 63
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x8E, 0x8E, 0x8E, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0x03, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 64
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 65
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 66
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 67
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 68
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 69
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 70
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 71
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 72
    0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 73
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 74
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 75
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 76
    0xF8, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01, 0x0E, 0x0E, 0x0E, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 77
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x0E, 0x0E, 0x0E, 0x70, 0x70, 0x70, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 78
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 79
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x0F, 0x0F, 0x0F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 80
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xFC, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 81
    0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 82
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x0F, 0x0F, 0x0F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 83
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0xF8, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 84
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 85
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 86
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 87
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x8F, 0x8F, 0x8F, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 88
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x01, 0x01, 0x01, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 89
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xF8, 0xF8, 0xF8, 0x80, 0x80, 0x80, 0x70, 0x70, 0x70, 0x0E, 0x0E, 0x0E, 0x01, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 90
    0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 91
    0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0xF0, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 92
    0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, // 93
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0xC0, 0xC0, 0xC0, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 94
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 95
    0xF8, 0xF8, 0xF8, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 96
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0xF0, 0xF0, 0xF0, 0x1C, 0x1C, 0x1C, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 97
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 98
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 99
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xFF, 0xFF, 0xFF, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 100
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0xF0, 0xF0, 0xF0, 0x1F, 0x1F, 0x1F, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 101
    0xC0, 0xC0, 0xC0, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0xFF, 0xFF, 0xFF, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 102
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, // 103
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 104
    0x38, 0x38, 0x38, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 105
    0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, // 106
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x80, 0x80, 0x7E, 0x7E, 0x7E, 0xFF, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 107
    0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 108
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x0E, 0x0E, 0x0E, 0xFE, 0xFE, 0xFE, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 109
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 110
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 111
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 112
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xFE, 0xFE, 0xFE, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFC, // 113
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 114
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x0E, 0x0E, 0x0E, 0xE0, 0xE0, 0xE0, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 115
    0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0E, 0x0E, 0x0E, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 116
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 117
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x03, 0x03, 0x03, 0x1C, 0x1C, 0x1C, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 118
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, 0xE0, 0xE0, 0xE0, 0x1F, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 119
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 0xFC, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFC, 0xFC, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 120
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFE, 0xFE, 0x1F, 0x1F, 0x1F, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x1C, 0x1C, 0x1C, // 121
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x8E, 0x7E, 0x7E, 0x7E, 0xFC, 0xFC, 0xFC, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE3, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 122
    0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0x07, 0x07, 0x07, 0x70, 0x70, 0x70, 0x8F, 0x8F, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, // 123
    0xF8, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 124
    0x07, 0x07, 0x07, 0xF8, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8F, 0x8F, 0x8F, 0x70, 0x70, 0x70, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x1C, 0x1C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 125
    0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // 126

};

/*
 *
 * alterebro15nums
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : alterebro15nums.h
 * Date                : 15.02.2013
 * Font size in bytes  : 341
 * Font width          : 10
 * Font height         : 7
 * Font first char     : 45
 * Font last char      : 58
 * Font used chars     : 13
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 *
 */
#define ALTEREBRO15NUMS_WIDTH 10
#define ALTEREBRO15NUMS_HEIGHT 7

static const uint8_t alterebro15nums[] = {
    0x01, 0x55, // size
    0x0A, // width
    0x07, // height
    0x2D, // first char
    0x0D, // char count

    // char widths
    0x03, 0x01, 0x04, 0x04, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04,
    0x04, 0x04, 0x04,

    // font data
    0x08, 0x08, 0x08, // 45
    0x40, // 46
    0x60, 0x18, 0x06, 0x01, // 47
    0x3E, 0x41, 0x41, 0x3E, // 48
    0x02, 0x7F, // 49
    0x62, 0x51, 0x49, 0x46, // 50
    0x41, 0x49, 0x49, 0x37, // 51
    0x0F, 0x08, 0x08, 0x7F, // 52
    0x4F, 0x49, 0x49, 0x31, // 53
    0x3E, 0x49, 0x49, 0x30, // 54
    0x01, 0x71, 0x09, 0x07, // 55
    0x36, 0x49, 0x49, 0x36, // 56
    0x46, 0x49, 0x49, 0x3E  // 57
};

//GLCD FontName : Terminal3x5
//GLCD FontSize : 3 x 5
//THIS FONT IS HARDCODED ALL CAPS
#define Terminal3x5_WIDTH 3
#define Terminal3x5_HEIGHT 5

static const uint8_t Terminal3x5[] = {
    0x00, 0x00,     // size 
    0x03,           // width
    0x05,           // height
    0x20,           // first char
    0x5F,           // char count

    0x00, 0x00, 0x00,                        // Code for char  
    0x00, 0x17, 0x00,                        // Code for char !
    0x03, 0x00, 0x03,                        // Code for char "
    0x1F, 0x0A, 0x1F,                        // Code for char #
    0x0A, 0x1F, 0x05,                        // Code for char $
    0x09, 0x04, 0x12,                        // Code for char %
    0x0A, 0x15, 0x1A,                        // Code for char &
    0x03, 0x01, 0x00,                        // Code for char '
    0x0E, 0x11, 0x00,                        // Code for char (
    0x11, 0x0E, 0x00,                        // Code for char )
    0x15, 0x0E, 0x15,                        // Code for char *
    0x04, 0x0E, 0x04,                        // Code for char +
    0x10, 0x08, 0x00,                        // Code for char ,
    0x04, 0x04, 0x04,                        // Code for char -
    0x00, 0x10, 0x00,                        // Code for char .
    0x18, 0x04, 0x03,                        // Code for char /
    0x1F, 0x11, 0x1F,                        // Code for char 0
    0x00, 0x1F, 0x00,                        // Code for char 1
    0x1D, 0x15, 0x17,                        // Code for char 2
    0x15, 0x15, 0x1F,                        // Code for char 3
    0x07, 0x04, 0x1F,                        // Code for char 4
    0x17, 0x15, 0x1D,                        // Code for char 5
    0x1F, 0x15, 0x1D,                        // Code for char 6
    0x01, 0x01, 0x1F,                        // Code for char 7
    0x1F, 0x15, 0x1F,                        // Code for char 8
    0x17, 0x15, 0x1F,                        // Code for char 9
    0x00, 0x0A, 0x00,                        // Code for char :
    0x10, 0x0A, 0x00,                        // Code for char ;
    0x04, 0x0A, 0x11,                        // Code for char <
    0x14, 0x14, 0x14,                        // Code for char =
    0x11, 0x0A, 0x04,                        // Code for char >
    0x01, 0x15, 0x02,                        // Code for char ?
    0x1F, 0x11, 0x17,                        // Code for char @
    0x1E, 0x05, 0x1E,                        // Code for char A
    0x1F, 0x15, 0x0A,                        // Code for char B
    0x0E, 0x11, 0x11,                        // Code for char C
    0x1F, 0x11, 0x0E,                        // Code for char D
    0x1F, 0x15, 0x11,                        // Code for char E
    0x1F, 0x05, 0x01,                        // Code for char F
    0x0E, 0x11, 0x1D,                        // Code for char G
    0x1F, 0x04, 0x1F,                        // Code for char H
    0x11, 0x1F, 0x11,                        // Code for char I
    0x08, 0x10, 0x0F,                        // Code for char J
    0x1F, 0x04, 0x1B,                        // Code for char K
    0x1F, 0x10, 0x10,                        // Code for char L
    0x1F, 0x06, 0x1F,                        // Code for char M
    0x1F, 0x02, 0x1F,                        // Code for char N
    0x0E, 0x11, 0x0E,                        // Code for char O
    0x1F, 0x05, 0x02,                        // Code for char P
    0x0E, 0x19, 0x1E,                        // Code for char Q
    0x1F, 0x05, 0x1A,                        // Code for char R
    0x16, 0x15, 0x0D,                        // Code for char S
    0x01, 0x1F, 0x01,                        // Code for char T
    0x1F, 0x10, 0x1F,                        // Code for char U
    0x0F, 0x10, 0x0F,                        // Code for char V
    0x1F, 0x0C, 0x1F,                        // Code for char W
    0x1B, 0x04, 0x1B,                        // Code for char X
    0x03, 0x1C, 0x03,                        // Code for char Y
    0x19, 0x15, 0x13,                        // Code for char Z
    0x1F, 0x11, 0x00,                        // Code for char [
    0x03, 0x04, 0x18,                        // Code for char BackSlash
    0x11, 0x1F, 0x00,                        // Code for char ]
    0x02, 0x01, 0x02,                        // Code for char ^
    0x10, 0x10, 0x10,                        // Code for char _
    0x01, 0x03, 0x00,                        // Code for char `
    0x1E, 0x05, 0x1E,                        // Code for char A         //0x18, 0x14, 0x1C,                        // Code for char a
    0x1F, 0x15, 0x0A,                        // Code for char B         //0x1F, 0x14, 0x08,                        // Code for char b
    0x0E, 0x11, 0x11,                        // Code for char C         //0x08, 0x14, 0x14,                        // Code for char c
    0x1F, 0x11, 0x0E,                        // Code for char D         //0x08, 0x14, 0x1F,                        // Code for char d
    0x1F, 0x15, 0x11,                        // Code for char E         //0x0C, 0x1C, 0x14,                        // Code for char e
    0x1F, 0x05, 0x01,                        // Code for char F         //0x04, 0x1E, 0x05,                        // Code for char f
    0x0E, 0x11, 0x1D,                        // Code for char G         //0x0C, 0x04, 0x1C,                        // Code for char g
    0x1F, 0x04, 0x1F,                        // Code for char H         //0x1F, 0x04, 0x18,                        // Code for char h
    0x11, 0x1F, 0x11,                        // Code for char I         //0x00, 0x1D, 0x00,                        // Code for char i
    0x08, 0x10, 0x0F,                        // Code for char J         //0x00, 0x1D, 0x00,                        // Code for char j
    0x1F, 0x04, 0x1B,                        // Code for char K         //0x1F, 0x08, 0x14,                        // Code for char k
    0x1F, 0x10, 0x10,                        // Code for char L         //0x00, 0x1F, 0x00,                        // Code for char l
    0x1F, 0x06, 0x1F,                        // Code for char M         //0x1C, 0x0C, 0x1C,                        // Code for char m
    0x1F, 0x02, 0x1F,                        // Code for char N         //0x1C, 0x04, 0x18,                        // Code for char n
    0x0E, 0x11, 0x0E,                        // Code for char O         //0x08, 0x14, 0x08,                        // Code for char o
    0x1F, 0x05, 0x02,                        // Code for char P         //0x1C, 0x14, 0x08,                        // Code for char p
    0x0E, 0x19, 0x1E,                        // Code for char Q         //0x08, 0x14, 0x1C,                        // Code for char q
    0x1F, 0x05, 0x1A,                        // Code for char R         //0x1C, 0x04, 0x00,                        // Code for char r
    0x16, 0x15, 0x0D,                        // Code for char S         //0x10, 0x1C, 0x04,                        // Code for char s
    0x01, 0x1F, 0x01,                        // Code for char T         //0x04, 0x1E, 0x14,                        // Code for char t
    0x1F, 0x10, 0x1F,                        // Code for char U         //0x1C, 0x10, 0x1C,                        // Code for char u
    0x0F, 0x10, 0x0F,                        // Code for char V         //0x0C, 0x10, 0x0C,                        // Code for char v
    0x1F, 0x0C, 0x1F,                        // Code for char W         //0x1C, 0x18, 0x1C,                        // Code for char w
    0x1B, 0x04, 0x1B,                        // Code for char X         //0x14, 0x08, 0x14,                        // Code for char x
    0x03, 0x1C, 0x03,                        // Code for char Y         //0x0C, 0x10, 0x0C,                        // Code for char y
    0x19, 0x15, 0x13,                        // Code for char Z         //0x04, 0x1C, 0x10,                        // Code for char z
    0x04, 0x1F, 0x11,                        // Code for char {
    0x00, 0x1F, 0x00,                        // Code for char |
    0x11, 0x1F, 0x04,                        // Code for char }
    0x04, 0x06, 0x02                         // Code for char ~
};

//GLCD FontName : Terminal5x7
//GLCD FontSize : 5 x 7
//THIS FONT IS HARDCODED ALL CAPS
#define Terminal5x7_WIDTH 5
#define Terminal5x7_HEIGHT 7

static const uint8_t Terminal5x7[] = {
    0x00, 0x00,     // size 
    0x05,           // width
    0x07,           // height
    0x20,           // first char
    0x5F,           // char count

    0x00, 0x00, 0x00, 0x00, 0x00,            // Code for char  
    0x00, 0x06, 0x5F, 0x06, 0x00,            // Code for char !
    0x07, 0x03, 0x00, 0x07, 0x03,            // Code for char "
    0x24, 0x7E, 0x24, 0x7E, 0x24,            // Code for char #
    0x24, 0x2B, 0x6A, 0x12, 0x00,            // Code for char $
    0x63, 0x13, 0x08, 0x64, 0x63,            // Code for char %
    0x36, 0x49, 0x56, 0x20, 0x50,            // Code for char &
    0x00, 0x07, 0x03, 0x00, 0x00,            // Code for char '
    0x00, 0x3E, 0x41, 0x00, 0x00,            // Code for char (
    0x00, 0x41, 0x3E, 0x00, 0x00,            // Code for char )
    0x08, 0x3E, 0x1C, 0x3E, 0x08,            // Code for char *
    0x08, 0x08, 0x3E, 0x08, 0x08,            // Code for char +
    0x00, 0x70, 0x30, 0x00, 0x00,            // Code for char ,
    0x08, 0x08, 0x08, 0x08, 0x08,            // Code for char -
    0x00, 0x60, 0x60, 0x00, 0x00,            // Code for char .
    0x20, 0x10, 0x08, 0x04, 0x02,            // Code for char /
    0x3E, 0x51, 0x49, 0x45, 0x3E,            // Code for char 0
    0x00, 0x42, 0x7F, 0x40, 0x00,            // Code for char 1
    0x62, 0x51, 0x49, 0x49, 0x46,            // Code for char 2
    0x22, 0x49, 0x49, 0x49, 0x36,            // Code for char 3
    0x18, 0x14, 0x12, 0x7F, 0x10,            // Code for char 4
    0x2F, 0x49, 0x49, 0x49, 0x31,            // Code for char 5
    0x3C, 0x4A, 0x49, 0x49, 0x30,            // Code for char 6
    0x01, 0x71, 0x09, 0x05, 0x03,            // Code for char 7
    0x36, 0x49, 0x49, 0x49, 0x36,            // Code for char 8
    0x06, 0x49, 0x49, 0x29, 0x1E,            // Code for char 9
    0x00, 0x36, 0x36, 0x00, 0x00,            // Code for char :
    0x00, 0x76, 0x36, 0x00, 0x00,            // Code for char ;
    0x08, 0x14, 0x22, 0x41, 0x00,            // Code for char <
    0x24, 0x24, 0x24, 0x24, 0x24,            // Code for char =
    0x00, 0x41, 0x22, 0x14, 0x08,            // Code for char >
    0x02, 0x01, 0x59, 0x09, 0x06,            // Code for char ?
    0x3E, 0x41, 0x5D, 0x55, 0x1E,            // Code for char @
    0x7E, 0x11, 0x11, 0x11, 0x7E,            // Code for char A
    0x7F, 0x49, 0x49, 0x49, 0x36,            // Code for char B
    0x3E, 0x41, 0x41, 0x41, 0x22,            // Code for char C
    0x7F, 0x41, 0x41, 0x41, 0x3E,            // Code for char D
    0x7F, 0x49, 0x49, 0x49, 0x41,            // Code for char E
    0x7F, 0x09, 0x09, 0x09, 0x01,            // Code for char F
    0x3E, 0x41, 0x49, 0x49, 0x7A,            // Code for char G
    0x7F, 0x08, 0x08, 0x08, 0x7F,            // Code for char H
    0x00, 0x41, 0x7F, 0x41, 0x00,            // Code for char I
    0x30, 0x40, 0x40, 0x40, 0x3F,            // Code for char J
    0x7F, 0x08, 0x14, 0x22, 0x41,            // Code for char K
    0x7F, 0x40, 0x40, 0x40, 0x40,            // Code for char L
    0x7F, 0x02, 0x04, 0x02, 0x7F,            // Code for char M
    0x7F, 0x02, 0x04, 0x08, 0x7F,            // Code for char N
    0x3E, 0x41, 0x41, 0x41, 0x3E,            // Code for char O
    0x7F, 0x09, 0x09, 0x09, 0x06,            // Code for char P
    0x3E, 0x41, 0x51, 0x21, 0x5E,            // Code for char Q
    0x7F, 0x09, 0x09, 0x19, 0x66,            // Code for char R
    0x26, 0x49, 0x49, 0x49, 0x32,            // Code for char S
    0x01, 0x01, 0x7F, 0x01, 0x01,            // Code for char T
    0x3F, 0x40, 0x40, 0x40, 0x3F,            // Code for char U
    0x1F, 0x20, 0x40, 0x20, 0x1F,            // Code for char V
    0x3F, 0x40, 0x3C, 0x40, 0x3F,            // Code for char W
    0x63, 0x14, 0x08, 0x14, 0x63,            // Code for char X
    0x07, 0x08, 0x70, 0x08, 0x07,            // Code for char Y
    0x71, 0x49, 0x45, 0x43, 0x00,            // Code for char Z
    0x00, 0x7F, 0x41, 0x41, 0x00,            // Code for char [
    0x02, 0x04, 0x08, 0x10, 0x20,            // Code for char BackSlash
    0x00, 0x41, 0x41, 0x7F, 0x00,            // Code for char ]
    0x04, 0x02, 0x01, 0x02, 0x04,            // Code for char ^
    0x40, 0x40, 0x40, 0x40, 0x40,            // Code for char _
    0x00, 0x03, 0x07, 0x00, 0x00,            // Code for char `
    0x7E, 0x11, 0x11, 0x11, 0x7E,            // Code for char A    //0x20, 0x54, 0x54, 0x54, 0x78,            // Code for char a
    0x7F, 0x49, 0x49, 0x49, 0x36,            // Code for char B    //0x7F, 0x44, 0x44, 0x44, 0x38,            // Code for char b
    0x3E, 0x41, 0x41, 0x41, 0x22,            // Code for char C    //0x38, 0x44, 0x44, 0x44, 0x28,            // Code for char c
    0x7F, 0x41, 0x41, 0x41, 0x3E,            // Code for char D    //0x38, 0x44, 0x44, 0x44, 0x7F,            // Code for char d
    0x7F, 0x49, 0x49, 0x49, 0x41,            // Code for char E    //0x38, 0x54, 0x54, 0x54, 0x08,            // Code for char e
    0x7F, 0x09, 0x09, 0x09, 0x01,            // Code for char F    //0x08, 0x7E, 0x09, 0x09, 0x00,            // Code for char f
    0x3E, 0x41, 0x49, 0x49, 0x7A,            // Code for char G    //0x18, 0x24, 0x24, 0x24, 0x7C,            // Code for char g
    0x7F, 0x08, 0x08, 0x08, 0x7F,            // Code for char H    //0x7F, 0x04, 0x04, 0x78, 0x00,            // Code for char h
    0x00, 0x41, 0x7F, 0x41, 0x00,            // Code for char I    //0x00, 0x00, 0x7D, 0x40, 0x00,            // Code for char i
    0x30, 0x40, 0x40, 0x40, 0x3F,            // Code for char J    //0x40, 0x00, 0x04, 0x7D, 0x00,            // Code for char j
    0x7F, 0x08, 0x14, 0x22, 0x41,            // Code for char K    //0x7F, 0x10, 0x28, 0x44, 0x00,            // Code for char k
    0x7F, 0x40, 0x40, 0x40, 0x40,            // Code for char L    //0x00, 0x00, 0x7F, 0x40, 0x00,            // Code for char l
    0x7F, 0x02, 0x04, 0x02, 0x7F,            // Code for char M    //0x7C, 0x04, 0x18, 0x04, 0x78,            // Code for char m
    0x7F, 0x02, 0x04, 0x08, 0x7F,            // Code for char N    //0x7C, 0x04, 0x04, 0x78, 0x00,            // Code for char n
    0x3E, 0x41, 0x41, 0x41, 0x3E,            // Code for char O    //0x38, 0x44, 0x44, 0x44, 0x38,            // Code for char o
    0x7F, 0x09, 0x09, 0x09, 0x06,            // Code for char P    //0x7C, 0x44, 0x44, 0x44, 0x38,            // Code for char p
    0x3E, 0x41, 0x51, 0x21, 0x5E,            // Code for char Q    //0x38, 0x44, 0x44, 0x44, 0x7C,            // Code for char q
    0x7F, 0x09, 0x09, 0x19, 0x66,            // Code for char R    //0x44, 0x78, 0x44, 0x04, 0x08,            // Code for char r
    0x26, 0x49, 0x49, 0x49, 0x32,            // Code for char S    //0x08, 0x54, 0x54, 0x54, 0x20,            // Code for char s
    0x01, 0x01, 0x7F, 0x01, 0x01,            // Code for char T    //0x04, 0x3E, 0x44, 0x24, 0x00,            // Code for char t
    0x3F, 0x40, 0x40, 0x40, 0x3F,            // Code for char U    //0x3C, 0x40, 0x20, 0x7C, 0x00,            // Code for char u
    0x1F, 0x20, 0x40, 0x20, 0x1F,            // Code for char V    //0x1C, 0x20, 0x40, 0x20, 0x1C,            // Code for char v
    0x3F, 0x40, 0x3C, 0x40, 0x3F,            // Code for char W    //0x3C, 0x60, 0x30, 0x60, 0x3C,            // Code for char w
    0x63, 0x14, 0x08, 0x14, 0x63,            // Code for char X    //0x6C, 0x10, 0x10, 0x6C, 0x00,            // Code for char x
    0x07, 0x08, 0x70, 0x08, 0x07,            // Code for char Y    //0x1C, 0x20, 0x60, 0x3C, 0x00,            // Code for char y
    0x71, 0x49, 0x45, 0x43, 0x00,            // Code for char Z    //0x64, 0x54, 0x54, 0x4C, 0x00,            // Code for char z
    0x08, 0x3E, 0x41, 0x41, 0x00,            // Code for char {
    0x00, 0x00, 0x7F, 0x00, 0x00,            // Code for char |
    0x00, 0x41, 0x41, 0x3E, 0x08,            // Code for char }
    0x02, 0x01, 0x02, 0x01, 0x00             // Code for char ~
};

//GLCD FontName : Terminal7x8
//GLCD FontSize : 7 x 8
//THIS FONT IS HARDCODED ALL CAPS
#define TerminalBOLD7x8_WIDTH 7
#define TerminalBOLD7x8_HEIGHT 8

static const uint8_t Terminal7x8[] = {
    0x00, 0x00,     // size 
    0x07,           // width
    0x08,           // height
    0x20,           // first char
    0x5F,           // char count

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // Code for char  
        0x00, 0x00, 0xDF, 0xDF, 0x00, 0x00, 0x00,  // Code for char !
        0x00, 0x07, 0x03, 0x00, 0x07, 0x03, 0x00,  // Code for char "
        0x24, 0xFF, 0xFF, 0x24, 0xFF, 0xFF, 0x24,  // Code for char #
        0x00, 0x64, 0x4A, 0xFF, 0x52, 0x26, 0x00,  // Code for char $
        0xC3, 0x63, 0x30, 0x18, 0x0C, 0xC6, 0xC3,  // Code for char %
        0x76, 0xFF, 0x99, 0x9F, 0xF6, 0x70, 0xD8,  // Code for char &
        0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00,  // Code for char '
        0x00, 0x00, 0x00, 0x3C, 0x7E, 0xC3, 0x81,  // Code for char (
        0x81, 0xC3, 0x7E, 0x3C, 0x00, 0x00, 0x00,  // Code for char )
        0x24, 0x3C, 0x7E, 0x7E, 0x3C, 0x24, 0x00,  // Code for char *
        0x18, 0x18, 0x7E, 0x7E, 0x18, 0x18, 0x00,  // Code for char +
        0x00, 0x00, 0xE0, 0x60, 0x00, 0x00, 0x00,  // Code for char ,
        0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,  // Code for char -
        0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00,  // Code for char .
        0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x00,  // Code for char /
        0x7E, 0xFF, 0x81, 0x81, 0xFF, 0x7E, 0x00,  // Code for char 0
        0x00, 0x82, 0xFF, 0xFF, 0x80, 0x00, 0x00,  // Code for char 1
        0xC2, 0xE3, 0xB1, 0x99, 0x8F, 0x86, 0x00,  // Code for char 2
        0x42, 0xC3, 0x89, 0x89, 0xFF, 0x76, 0x00,  // Code for char 3
        0x38, 0x3C, 0x26, 0xF3, 0xF1, 0x20, 0x00,  // Code for char 4
        0x4F, 0xCF, 0x89, 0x89, 0xF9, 0x71, 0x00,  // Code for char 5
        0x7E, 0xFF, 0x91, 0x91, 0xF3, 0x62, 0x00,  // Code for char 6
        0x01, 0x01, 0xF1, 0xF9, 0x0F, 0x07, 0x00,  // Code for char 7
        0x76, 0xFF, 0x89, 0x89, 0xFF, 0x76, 0x00,  // Code for char 8
        0x4E, 0xDF, 0x91, 0x91, 0xFF, 0x7E, 0x00,  // Code for char 9
        0x00, 0x00, 0x6C, 0x6C, 0x00, 0x00, 0x00,  // Code for char :
        0x00, 0x00, 0xEC, 0x6C, 0x00, 0x00, 0x00,  // Code for char ;
        0x00, 0x10, 0x38, 0x6C, 0xC6, 0x82, 0x00,  // Code for char <
        0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00,  // Code for char =
        0x00, 0x82, 0xC6, 0x6C, 0x38, 0x10, 0x00,  // Code for char >
        0x06, 0x03, 0xD1, 0xD9, 0x0F, 0x06, 0x00,  // Code for char ?
        0x7E, 0xFF, 0x81, 0xBD, 0xA5, 0xBF, 0x1E,  // Code for char @
        0xFE, 0xFF, 0x09, 0x09, 0xFF, 0xFE, 0x00,  // Code for char A
        0xFF, 0xFF, 0x89, 0x89, 0xFF, 0x76, 0x00,  // Code for char B
        0x7E, 0xFF, 0x81, 0x81, 0xC3, 0x42, 0x00,  // Code for char C
        0xFF, 0xFF, 0x81, 0x81, 0xFF, 0x7E, 0x00,  // Code for char D
        0xFF, 0xFF, 0x89, 0x89, 0x89, 0x81, 0x00,  // Code for char E
        0xFF, 0xFF, 0x09, 0x09, 0x09, 0x01, 0x00,  // Code for char F
        0x7E, 0xFF, 0x81, 0x91, 0xF3, 0x72, 0x00,  // Code for char G
        0xFF, 0xFF, 0x08, 0x08, 0xFF, 0xFF, 0x00,  // Code for char H
        0x00, 0x81, 0xFF, 0xFF, 0x81, 0x00, 0x00,  // Code for char I
        0x40, 0xC0, 0x80, 0xFF, 0x7F, 0x00, 0x00,  // Code for char J
        0xFF, 0xFF, 0x18, 0x3C, 0xE7, 0xC3, 0x00,  // Code for char K
        0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,  // Code for char L
        0xFF, 0xFF, 0x03, 0x06, 0x03, 0xFF, 0xFF,  // Code for char M
        0xFF, 0xFF, 0x0C, 0x30, 0xFF, 0xFF, 0x00,  // Code for char N
        0x7E, 0xFF, 0x81, 0x81, 0xFF, 0x7E, 0x00,  // Code for char O
        0xFF, 0xFF, 0x11, 0x11, 0x1F, 0x0E, 0x00,  // Code for char P
        0x7E, 0xFF, 0x81, 0x81, 0x7F, 0xBE, 0x00,  // Code for char Q
        0xFF, 0xFF, 0x11, 0x31, 0xFF, 0xCE, 0x00,  // Code for char R
        0x4E, 0xDF, 0x99, 0x99, 0xFB, 0x72, 0x00,  // Code for char S
        0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x00,  // Code for char T
        0x7F, 0xFF, 0x80, 0x80, 0xFF, 0x7F, 0x00,  // Code for char U
        0x3F, 0x7F, 0xC0, 0xC0, 0x7F, 0x3F, 0x00,  // Code for char V
        0xFF, 0xFF, 0x60, 0x30, 0x60, 0xFF, 0xFF,  // Code for char W
        0xC3, 0xE7, 0x3C, 0x3C, 0xE7, 0xC3, 0x00,  // Code for char X
        0x0F, 0x1F, 0xF0, 0xF0, 0x1F, 0x0F, 0x00,  // Code for char Y
        0xC3, 0xE3, 0xF3, 0xDB, 0xCF, 0xC7, 0x00,  // Code for char Z
        0x00, 0x00, 0x00, 0xFF, 0xFF, 0x81, 0x81,  // Code for char [
        0x00, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00,  // Code for char BackSlash
        0x81, 0x81, 0xFF, 0xFF, 0x00, 0x00, 0x00,  // Code for char ]
        0x00, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x00,  // Code for char ^
        0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,  // Code for char _
        0x00, 0x00, 0x03, 0x07, 0x00, 0x00, 0x00,  // Code for char `
        0xFE, 0xFF, 0x09, 0x09, 0xFF, 0xFE, 0x00,  // Code for char A  //0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00,  // Code for char a
        0xFF, 0xFF, 0x89, 0x89, 0xFF, 0x76, 0x00,  // Code for char B  //0x00, 0x7F, 0x44, 0x44, 0x44, 0x38, 0x00,  // Code for char b
        0x7E, 0xFF, 0x81, 0x81, 0xC3, 0x42, 0x00,  // Code for char C  //0x00, 0x38, 0x44, 0x44, 0x44, 0x28, 0x00,  // Code for char c
        0xFF, 0xFF, 0x81, 0x81, 0xFF, 0x7E, 0x00,  // Code for char D  //0x00, 0x38, 0x44, 0x44, 0x44, 0x7F, 0x00,  // Code for char d
        0xFF, 0xFF, 0x89, 0x89, 0x89, 0x81, 0x00,  // Code for char E  //0x00, 0x38, 0x54, 0x54, 0x54, 0x08, 0x00,  // Code for char e
        0xFF, 0xFF, 0x09, 0x09, 0x09, 0x01, 0x00,  // Code for char F  //0x00, 0x08, 0x7E, 0x09, 0x09, 0x00, 0x00,  // Code for char f
        0x7E, 0xFF, 0x81, 0x91, 0xF3, 0x72, 0x00,  // Code for char G  //0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00,  // Code for char g
        0xFF, 0xFF, 0x08, 0x08, 0xFF, 0xFF, 0x00,  // Code for char H  //0x00, 0x7F, 0x04, 0x04, 0x78, 0x00, 0x00,  // Code for char h
        0x00, 0x81, 0xFF, 0xFF, 0x81, 0x00, 0x00,  // Code for char I  //0x00, 0x00, 0x00, 0x7D, 0x40, 0x00, 0x00,  // Code for char i
        0x40, 0xC0, 0x80, 0xFF, 0x7F, 0x00, 0x00,  // Code for char J  //0x00, 0x40, 0x80, 0x84, 0x7D, 0x00, 0x00,  // Code for char j
        0xFF, 0xFF, 0x18, 0x3C, 0xE7, 0xC3, 0x00,  // Code for char K  //0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00,  // Code for char k
        0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00,  // Code for char L  //0x00, 0x00, 0x00, 0x7F, 0x40, 0x00, 0x00,  // Code for char l
        0xFF, 0xFF, 0x03, 0x06, 0x03, 0xFF, 0xFF,  // Code for char M  //0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00,  // Code for char m
        0xFF, 0xFF, 0x0C, 0x30, 0xFF, 0xFF, 0x00,  // Code for char N  //0x00, 0x7C, 0x04, 0x04, 0x78, 0x00, 0x00,  // Code for char n
        0x7E, 0xFF, 0x81, 0x81, 0xFF, 0x7E, 0x00,  // Code for char O  //0x00, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00,  // Code for char o
        0xFF, 0xFF, 0x11, 0x11, 0x1F, 0x0E, 0x00,  // Code for char P  //0x00, 0xFC, 0x44, 0x44, 0x44, 0x38, 0x00,  // Code for char p
        0x7E, 0xFF, 0x81, 0x81, 0x7F, 0xBE, 0x00,  // Code for char Q  //0x00, 0x38, 0x44, 0x44, 0x44, 0xFC, 0x00,  // Code for char q
        0xFF, 0xFF, 0x11, 0x31, 0xFF, 0xCE, 0x00,  // Code for char R  //0x00, 0x44, 0x78, 0x44, 0x04, 0x08, 0x00,  // Code for char r
        0x4E, 0xDF, 0x99, 0x99, 0xFB, 0x72, 0x00,  // Code for char S  //0x00, 0x08, 0x54, 0x54, 0x54, 0x20, 0x00,  // Code for char s
        0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0x00,  // Code for char T  //0x00, 0x04, 0x3E, 0x44, 0x24, 0x00, 0x00,  // Code for char t
        0x7F, 0xFF, 0x80, 0x80, 0xFF, 0x7F, 0x00,  // Code for char U  //0x00, 0x3C, 0x40, 0x20, 0x7C, 0x00, 0x00,  // Code for char u
        0x3F, 0x7F, 0xC0, 0xC0, 0x7F, 0x3F, 0x00,  // Code for char V  //0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00,  // Code for char v
        0xFF, 0xFF, 0x60, 0x30, 0x60, 0xFF, 0xFF,  // Code for char W  //0x00, 0x3C, 0x60, 0x30, 0x60, 0x3C, 0x00,  // Code for char w
        0xC3, 0xE7, 0x3C, 0x3C, 0xE7, 0xC3, 0x00,  // Code for char X  //0x00, 0x6C, 0x10, 0x10, 0x6C, 0x00, 0x00,  // Code for char x
        0x0F, 0x1F, 0xF0, 0xF0, 0x1F, 0x0F, 0x00,  // Code for char Y  //0x00, 0x9C, 0xA0, 0x60, 0x3C, 0x00, 0x00,  // Code for char y
        0xC3, 0xE3, 0xF3, 0xDB, 0xCF, 0xC7, 0x00,  // Code for char Z  //0x00, 0x64, 0x54, 0x54, 0x4C, 0x00, 0x00,  // Code for char z
        0x00, 0x00, 0x18, 0x7E, 0xE7, 0x81, 0x81,  // Code for char {
        0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,  // Code for char |
        0x81, 0x81, 0xE7, 0x7E, 0x18, 0x00, 0x00,  // Code for char }
        0x02, 0x03, 0x01, 0x02, 0x03, 0x01, 0x00   // Code for char ~
    };

#endif

/*

OLD AND NOT USED FONTS 

//WARNING: This Font is usable only with MikroE GLCD Lib.
//         X-GLCD Lib does not handle this font.
//Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
//MikroeElektronika 2011 
//http://www.mikroe.com 
//GLCD FontName : TerminalBold5x7
//GLCD FontSize : 5 x 7


#define TerminalBOLD5x7_WIDTH 5
#define TerminalBOLD5x7_HEIGHT 7

static const uint8_t TerminalBold5x7[] = {
    0x00, 0x00,     // size 
    0x05,           // width
    0x07,           // height
    0x20,           // first char
    0x5F,           // char count

    0x00, 0x00, 0x00, 0x00, 0x00,            // Code for char  
    0x00, 0x06, 0x5F, 0x06, 0x00,            // Code for char !
    0x07, 0x03, 0x00, 0x07, 0x03,            // Code for char "
    0x24, 0x7E, 0x24, 0x7E, 0x24,            // Code for char #
    0x2C, 0x2E, 0x6B, 0x3A, 0x1A,            // Code for char $
    0x66, 0x36, 0x18, 0x6C, 0x66,            // Code for char %
    0x36, 0x59, 0x59, 0x26, 0x50,            // Code for char &
    0x00, 0x07, 0x03, 0x00, 0x00,            // Code for char '
    0x00, 0x3E, 0x7F, 0x41, 0x00,            // Code for char (
    0x00, 0x41, 0x7F, 0x3E, 0x00,            // Code for char )
    0x08, 0x3E, 0x1C, 0x3E, 0x08,            // Code for char *
    0x08, 0x08, 0x3E, 0x08, 0x08,            // Code for char +
    0x00, 0x70, 0x30, 0x30, 0x00,            // Code for char ,
    0x08, 0x08, 0x08, 0x08, 0x08,            // Code for char -
    0x00, 0x60, 0x60, 0x60, 0x00,            // Code for char .
    0x60, 0x30, 0x18, 0x0C, 0x06,            // Code for char /
    0x3E, 0x7F, 0x63, 0x7F, 0x3E,            // Code for char 0
    0x66, 0x7F, 0x7F, 0x60, 0x00,            // Code for char 1
    0x63, 0x73, 0x59, 0x4F, 0x66,            // Code for char 2
    0x22, 0x6B, 0x49, 0x7F, 0x36,            // Code for char 3
    0x1C, 0x16, 0x73, 0x7F, 0x10,            // Code for char 4
    0x2F, 0x6F, 0x49, 0x79, 0x31,            // Code for char 5
    0x3C, 0x7E, 0x4B, 0x79, 0x30,            // Code for char 6
    0x03, 0x73, 0x7B, 0x0F, 0x07,            // Code for char 7
    0x36, 0x7F, 0x49, 0x7F, 0x36,            // Code for char 8
    0x06, 0x4F, 0x69, 0x3F, 0x1E,            // Code for char 9
    0x00, 0x36, 0x36, 0x36, 0x00,            // Code for char :
    0x00, 0x76, 0x76, 0x36, 0x00,            // Code for char ;
    0x08, 0x1C, 0x36, 0x63, 0x41,            // Code for char <
    0x24, 0x24, 0x24, 0x24, 0x24,            // Code for char =
    0x41, 0x63, 0x36, 0x1C, 0x08,            // Code for char >
    0x03, 0x03, 0x59, 0x0F, 0x06,            // Code for char ?
    0x3E, 0x41, 0x5D, 0x55, 0x1E,            // Code for char @
    0x7C, 0x7E, 0x13, 0x7E, 0x7C,            // Code for char A
    0x7F, 0x7F, 0x49, 0x7F, 0x36,            // Code for char B
    0x3E, 0x7F, 0x41, 0x77, 0x36,            // Code for char C
    0x7F, 0x7F, 0x41, 0x7F, 0x3E,            // Code for char D
    0x7F, 0x7F, 0x49, 0x49, 0x41,            // Code for char E
    0x7F, 0x7F, 0x1B, 0x1B, 0x03,            // Code for char F
    0x3E, 0x7F, 0x41, 0x5B, 0x7A,            // Code for char G
    0x7F, 0x7F, 0x08, 0x7F, 0x7F,            // Code for char H
    0x00, 0x63, 0x7F, 0x63, 0x00,            // Code for char I
    0x30, 0x70, 0x60, 0x7F, 0x3F,            // Code for char J
    0x7F, 0x08, 0x1C, 0x77, 0x63,            // Code for char K
    0x7F, 0x7F, 0x60, 0x60, 0x60,            // Code for char L
    0x7F, 0x07, 0x0C, 0x07, 0x7F,            // Code for char M
    0x7F, 0x07, 0x0C, 0x78, 0x7F,            // Code for char N
    0x3E, 0x7F, 0x41, 0x7F, 0x3E,            // Code for char O
    0x7F, 0x7F, 0x09, 0x0F, 0x06,            // Code for char P
    0x3E, 0x43, 0x59, 0x33, 0x6E,            // Code for char Q
    0x7F, 0x7F, 0x09, 0x7F, 0x66,            // Code for char R
    0x26, 0x6F, 0x49, 0x7B, 0x32,            // Code for char S
    0x03, 0x03, 0x7F, 0x03, 0x03,            // Code for char T
    0x3F, 0x7F, 0x60, 0x7F, 0x3F,            // Code for char U
    0x1F, 0x3F, 0x60, 0x3F, 0x1F,            // Code for char V
    0x3F, 0x70, 0x3C, 0x70, 0x3F,            // Code for char W
    0x63, 0x77, 0x08, 0x77, 0x63,            // Code for char X
    0x07, 0x0F, 0x78, 0x0F, 0x07,            // Code for char Y
    0x71, 0x79, 0x4D, 0x47, 0x43,            // Code for char Z
    0x00, 0x7F, 0x7F, 0x41, 0x00,            // Code for char [
    0x06, 0x0C, 0x18, 0x30, 0x60,            // Code for char BackSlash
    0x00, 0x41, 0x7F, 0x7F, 0x00,            // Code for char ]
    0x04, 0x06, 0x03, 0x06, 0x04,            // Code for char ^
    0x40, 0x40, 0x40, 0x40, 0x40,            // Code for char _
    0x00, 0x03, 0x07, 0x00, 0x00,            // Code for char `
    0x20, 0x54, 0x54, 0x54, 0x78,            // Code for char a
    0x7F, 0x44, 0x44, 0x44, 0x38,            // Code for char b
    0x38, 0x44, 0x44, 0x44, 0x28,            // Code for char c
    0x38, 0x44, 0x44, 0x44, 0x7F,            // Code for char d
    0x38, 0x54, 0x54, 0x54, 0x08,            // Code for char e
    0x08, 0x7E, 0x09, 0x09, 0x00,            // Code for char f
    0x18, 0x24, 0x24, 0x24, 0x7C,            // Code for char g
    0x7F, 0x04, 0x04, 0x78, 0x00,            // Code for char h
    0x00, 0x00, 0x7D, 0x40, 0x00,            // Code for char i
    0x40, 0x00, 0x04, 0x7D, 0x00,            // Code for char j
    0x7F, 0x10, 0x28, 0x44, 0x00,            // Code for char k
    0x00, 0x00, 0x7F, 0x40, 0x00,            // Code for char l
    0x7C, 0x04, 0x18, 0x04, 0x78,            // Code for char m
    0x7C, 0x04, 0x04, 0x78, 0x00,            // Code for char n
    0x38, 0x44, 0x44, 0x44, 0x38,            // Code for char o
    0x7C, 0x44, 0x44, 0x44, 0x38,            // Code for char p
    0x38, 0x44, 0x44, 0x44, 0x7C,            // Code for char q
    0x44, 0x78, 0x44, 0x04, 0x08,            // Code for char r
    0x08, 0x54, 0x54, 0x54, 0x20,            // Code for char s
    0x04, 0x3E, 0x44, 0x24, 0x00,            // Code for char t
    0x3C, 0x40, 0x20, 0x7C, 0x00,            // Code for char u
    0x1C, 0x20, 0x40, 0x20, 0x1C,            // Code for char v
    0x3C, 0x60, 0x30, 0x60, 0x3C,            // Code for char w
    0x6C, 0x10, 0x10, 0x6C, 0x00,            // Code for char x
    0x1C, 0x20, 0x60, 0x3C, 0x00,            // Code for char y
    0x64, 0x54, 0x54, 0x4C, 0x00,            // Code for char z
    0x08, 0x3E, 0x77, 0x41, 0x00,            // Code for char {
    0x00, 0x00, 0x7F, 0x00, 0x00,            // Code for char |
    0x41, 0x77, 0x3E, 0x08, 0x00,            // Code for char }
    0x02, 0x01, 0x02, 0x01, 0x00             // Code for char ~
    };

 *
 * System5x7
 *
 *
 * File Name           : System5x7.h
 * Date                : 28 Oct 2008
 * Font size in bytes  : 470
 * Font width          : 5
 * Font height         : 7
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 94
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 *

#define SYSTEM5x7_WIDTH 5
#define SYSTEM5x7_HEIGHT 7

static const uint8_t System5x7[] = {
    0x00, 0x00,     // size of zero indicates fixed width font, actual length is width * height
    0x05,           // width
    0x07,           // height
    0x20,           // first char
    0x60,           // char count

    // Fixed width; char width table not used !!!!

    // font data
    0x00, 0x00, 0x00, 0x00, 0x00,// (space)
    0x00, 0x00, 0x5F, 0x00, 0x00,// !
    0x00, 0x07, 0x00, 0x07, 0x00,// "
    0x14, 0x7F, 0x14, 0x7F, 0x14,// #
    0x24, 0x2A, 0x7F, 0x2A, 0x12,// $
    0x23, 0x13, 0x08, 0x64, 0x62,// %
    0x36, 0x49, 0x55, 0x22, 0x50,// &
    0x00, 0x05, 0x03, 0x00, 0x00,// '
    0x00, 0x1C, 0x22, 0x41, 0x00,// (
    0x00, 0x41, 0x22, 0x1C, 0x00,// )
    0x08, 0x2A, 0x1C, 0x2A, 0x08,// *
    0x08, 0x08, 0x3E, 0x08, 0x08,// +
    0x00, 0x50, 0x30, 0x00, 0x00,// ,
    0x08, 0x08, 0x08, 0x08, 0x08,// -
    0x00, 0x60, 0x60, 0x00, 0x00,// .
    0x20, 0x10, 0x08, 0x04, 0x02,// /
    0x3E, 0x51, 0x49, 0x45, 0x3E,// 0
    0x00, 0x42, 0x7F, 0x40, 0x00,// 1
    0x42, 0x61, 0x51, 0x49, 0x46,// 2
    0x21, 0x41, 0x45, 0x4B, 0x31,// 3
    0x18, 0x14, 0x12, 0x7F, 0x10,// 4
    0x27, 0x45, 0x45, 0x45, 0x39,// 5
    0x3C, 0x4A, 0x49, 0x49, 0x30,// 6
    0x01, 0x71, 0x09, 0x05, 0x03,// 7
    0x36, 0x49, 0x49, 0x49, 0x36,// 8
    0x06, 0x49, 0x49, 0x29, 0x1E,// 9
    0x00, 0x36, 0x36, 0x00, 0x00,// :
    0x00, 0x56, 0x36, 0x00, 0x00,// ;
    0x00, 0x08, 0x14, 0x22, 0x41,// <
    0x14, 0x14, 0x14, 0x14, 0x14,// =
    0x41, 0x22, 0x14, 0x08, 0x00,// >
    0x02, 0x01, 0x51, 0x09, 0x06,// ?
    0x32, 0x49, 0x79, 0x41, 0x3E,// @
    0x7E, 0x11, 0x11, 0x11, 0x7E,// A
    0x7F, 0x49, 0x49, 0x49, 0x36,// B
    0x3E, 0x41, 0x41, 0x41, 0x22,// C
    0x7F, 0x41, 0x41, 0x22, 0x1C,// D
    0x7F, 0x49, 0x49, 0x49, 0x41,// E
    0x7F, 0x09, 0x09, 0x01, 0x01,// F
    0x3E, 0x41, 0x41, 0x51, 0x32,// G
    0x7F, 0x08, 0x08, 0x08, 0x7F,// H
    0x00, 0x41, 0x7F, 0x41, 0x00,// I
    0x20, 0x40, 0x41, 0x3F, 0x01,// J
    0x7F, 0x08, 0x14, 0x22, 0x41,// K
    0x7F, 0x40, 0x40, 0x40, 0x40,// L
    0x7F, 0x02, 0x04, 0x02, 0x7F,// M
    0x7F, 0x04, 0x08, 0x10, 0x7F,// N
    0x3E, 0x41, 0x41, 0x41, 0x3E,// O
    0x7F, 0x09, 0x09, 0x09, 0x06,// P
    0x3E, 0x41, 0x51, 0x21, 0x5E,// Q
    0x7F, 0x09, 0x19, 0x29, 0x46,// R
    0x46, 0x49, 0x49, 0x49, 0x31,// S
    0x01, 0x01, 0x7F, 0x01, 0x01,// T
    0x3F, 0x40, 0x40, 0x40, 0x3F,// U
    0x1F, 0x20, 0x40, 0x20, 0x1F,// V
    0x7F, 0x20, 0x18, 0x20, 0x7F,// W
    0x63, 0x14, 0x08, 0x14, 0x63,// X
    0x03, 0x04, 0x78, 0x04, 0x03,// Y
    0x61, 0x51, 0x49, 0x45, 0x43,// Z
    0x00, 0x00, 0x7F, 0x41, 0x41,// [
    0x02, 0x04, 0x08, 0x10, 0x20,// "\"
    0x41, 0x41, 0x7F, 0x00, 0x00,// ]
    0x04, 0x02, 0x01, 0x02, 0x04,// ^
    0x40, 0x40, 0x40, 0x40, 0x40,// _
    0x00, 0x01, 0x02, 0x04, 0x00,// `
    0x7E, 0x11, 0x11, 0x11, 0x7E,// A   //0x20, 0x54, 0x54, 0x54, 0x78,// a
    0x7F, 0x49, 0x49, 0x49, 0x36,// B   //0x7F, 0x48, 0x44, 0x44, 0x38,// b
    0x3E, 0x41, 0x41, 0x41, 0x22,// C   //0x38, 0x44, 0x44, 0x44, 0x20,// c
    0x7F, 0x41, 0x41, 0x22, 0x1C,// D   //0x38, 0x44, 0x44, 0x48, 0x7F,// d
    0x7F, 0x49, 0x49, 0x49, 0x41,// E   //0x38, 0x54, 0x54, 0x54, 0x18,// e
    0x7F, 0x09, 0x09, 0x01, 0x01,// F   //0x08, 0x7E, 0x09, 0x01, 0x02,// f
    0x3E, 0x41, 0x41, 0x51, 0x32,// G   //0x08, 0x14, 0x54, 0x54, 0x3C,// g
    0x7F, 0x08, 0x08, 0x08, 0x7F,// H   //0x7F, 0x08, 0x04, 0x04, 0x78,// h
    0x00, 0x41, 0x7F, 0x41, 0x00,// I   //0x00, 0x44, 0x7D, 0x40, 0x00,// i
    0x20, 0x40, 0x41, 0x3F, 0x01,// J   //0x20, 0x40, 0x44, 0x3D, 0x00,// j
    0x7F, 0x08, 0x14, 0x22, 0x41,// K   //0x00, 0x7F, 0x10, 0x28, 0x44,// k
    0x7F, 0x40, 0x40, 0x40, 0x40,// L   //0x00, 0x41, 0x7F, 0x40, 0x00,// l
    0x7F, 0x02, 0x04, 0x02, 0x7F,// M   //0x7C, 0x04, 0x18, 0x04, 0x78,// m
    0x7F, 0x04, 0x08, 0x10, 0x7F,// N   //0x7C, 0x08, 0x04, 0x04, 0x78,// n
    0x3E, 0x41, 0x41, 0x41, 0x3E,// O   //0x38, 0x44, 0x44, 0x44, 0x38,// o
    0x7F, 0x09, 0x09, 0x09, 0x06,// P   //0x7C, 0x14, 0x14, 0x14, 0x08,// p
    0x3E, 0x41, 0x51, 0x21, 0x5E,// Q   //0x08, 0x14, 0x14, 0x18, 0x7C,// q
    0x7F, 0x09, 0x19, 0x29, 0x46,// R   //0x7C, 0x08, 0x04, 0x04, 0x08,// r
    0x46, 0x49, 0x49, 0x49, 0x31,// S   //0x48, 0x54, 0x54, 0x54, 0x20,// s
    0x01, 0x01, 0x7F, 0x01, 0x01,// T   //0x04, 0x3F, 0x44, 0x40, 0x20,// t
    0x3F, 0x40, 0x40, 0x40, 0x3F,// U   //0x3C, 0x40, 0x40, 0x20, 0x7C,// u
    0x1F, 0x20, 0x40, 0x20, 0x1F,// V   //0x1C, 0x20, 0x40, 0x20, 0x1C,// v
    0x7F, 0x20, 0x18, 0x20, 0x7F,// W   //0x3C, 0x40, 0x30, 0x40, 0x3C,// w
    0x63, 0x14, 0x08, 0x14, 0x63,// X   //0x44, 0x28, 0x10, 0x28, 0x44,// x
    0x03, 0x04, 0x78, 0x04, 0x03,// Y   //0x0C, 0x50, 0x50, 0x50, 0x3C,// y
    0x61, 0x51, 0x49, 0x45, 0x43,// Z   //0x44, 0x64, 0x54, 0x4C, 0x44,// z
    0x00, 0x08, 0x36, 0x41, 0x00,// {
    0x00, 0x00, 0x7F, 0x00, 0x00,// |
    0x00, 0x41, 0x36, 0x08, 0x00,// }
    0x08, 0x08, 0x2A, 0x1C, 0x08,// ->
    0x08, 0x1C, 0x2A, 0x08, 0x08 // <-
};

*
 *
 * alterebro15
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : alterebro15.h
 * Date                : 04.02.2013
 * Font size in bytes  : 3401
 * Font width          : 10
 * Font height         : 10
 * Font first char     : 32
 * Font last char      : 127
 * Font used chars     : 95
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 *

#define ALTEREBRO15_WIDTH 10
#define ALTEREBRO15_HEIGHT 9

static const uint8_t alterebro15[] = {
    0x0D, 0x49, // size
    0x0A, // width
    0x09, // height
    0x20, // first char
    0x5F, // char count

    // char widths
    0x02, 0x01, 0x03, 0x05, 0x05, 0x07, 0x05, 0x01, 0x02, 0x02,
    0x03, 0x05, 0x01, 0x03, 0x01, 0x04, 0x04, 0x02, 0x04, 0x04,
    0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x01, 0x01, 0x03, 0x03,
    0x03, 0x05, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
    0x04, 0x01, 0x04, 0x04, 0x03, 0x05, 0x04, 0x04, 0x04, 0x04,
    0x04, 0x04, 0x05, 0x04, 0x04, 0x05, 0x04, 0x05, 0x04, 0x02,
    0x04, 0x02, 0x03, 0x03, 0x01, 0x04, 0x04, 0x04, 0x04, 0x04,
    0x03, 0x04, 0x04, 0x01, 0x02, 0x03, 0x01, 0x05, 0x04, 0x04,
    0x04, 0x04, 0x03, 0x04, 0x03, 0x04, 0x04, 0x05, 0x04, 0x04,
    0x04, 0x03, 0x01, 0x03, 0x02,

    // font data
    0x00, 0x00, 0x00, 0x00, // 32
    0x5F, 0x00, // 33
    0x03, 0x00, 0x03, 0x00, 0x00, 0x00, // 34
    0x14, 0x3E, 0x14, 0x3E, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, // 35
    0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, // 36
    0x42, 0x25, 0x12, 0x08, 0x24, 0x52, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 37
    0x36, 0x49, 0x55, 0x22, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, // 38
    0x03, 0x00, // 39
    0x3E, 0x41, 0x00, 0x00, // 40
    0x41, 0x3E, 0x00, 0x00, // 41
    0x05, 0x02, 0x05, 0x00, 0x00, 0x00, // 42
    0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, // 43
    0xC0, 0x00, // 44
    0x08, 0x08, 0x08, 0x00, 0x00, 0x00, // 45
    0x40, 0x00, // 46
    0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, // 47
    0x3E, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00, 0x00, // 48
    0x02, 0x7F, 0x00, 0x00, // 49
    0x62, 0x51, 0x49, 0x46, 0x00, 0x00, 0x00, 0x00, // 50
    0x41, 0x49, 0x49, 0x37, 0x00, 0x00, 0x00, 0x00, // 51
    0x0F, 0x08, 0x08, 0x7F, 0x00, 0x00, 0x00, 0x00, // 52
    0x4F, 0x49, 0x49, 0x31, 0x00, 0x00, 0x00, 0x00, // 53
    0x3E, 0x49, 0x49, 0x30, 0x00, 0x00, 0x00, 0x00, // 54
    0x01, 0x71, 0x09, 0x07, 0x00, 0x00, 0x00, 0x00, // 55
    0x36, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00, 0x00, // 56
    0x46, 0x49, 0x49, 0x3E, 0x00, 0x00, 0x00, 0x00, // 57
    0x50, 0x00, // 58
    0xD0, 0x00, // 59
    0x10, 0x28, 0x44, 0x00, 0x00, 0x00, // 60
    0x14, 0x14, 0x14, 0x00, 0x00, 0x00, // 61
    0x44, 0x28, 0x10, 0x00, 0x00, 0x00, // 62
    0x02, 0x01, 0x51, 0x09, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // 63
    0x3E, 0x41, 0x5D, 0x55, 0x51, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 64
    0x7E, 0x09, 0x09, 0x7F, 0x00, 0x00, 0x00, 0x00, // 65
    0x7F, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00, 0x00, // 66
    0x3E, 0x41, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, // 67
    0x7F, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00, 0x00, // 68
    0x7F, 0x49, 0x49, 0x41, 0x00, 0x00, 0x00, 0x00, // 69
    0x7F, 0x09, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, // 70
    0x3E, 0x41, 0x41, 0x79, 0x00, 0x00, 0x00, 0x00, // 71
    0x7F, 0x08, 0x08, 0x7F, 0x00, 0x00, 0x00, 0x00, // 72
    0x7F, 0x00, // 73
    0x30, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00, 0x00, // 74
    0x7F, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00, 0x00, // 75
    0x7F, 0x40, 0x40, 0x00, 0x00, 0x00, // 76
    0x7F, 0x02, 0x04, 0x02, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, // 77
    0x7F, 0x04, 0x08, 0x7F, 0x00, 0x00, 0x00, 0x00, // 78
    0x3E, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00, 0x00, // 79
    0x7F, 0x09, 0x09, 0x06, 0x00, 0x00, 0x00, 0x00, // 80
    0x3E, 0x41, 0x61, 0x7E, 0x00, 0x00, 0x00, 0x00, // 81
    0x7F, 0x09, 0x09, 0x76, 0x00, 0x00, 0x00, 0x00, // 82
    0x46, 0x49, 0x49, 0x31, 0x00, 0x00, 0x00, 0x00, // 83
    0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 84
    0x3F, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00, 0x00, // 85
    0x3F, 0x40, 0x40, 0x7F, 0x00, 0x00, 0x00, 0x00, // 86
    0x3F, 0x40, 0x3C, 0x40, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, // 87
    0x77, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00, 0x00, // 88
    0x03, 0x04, 0x78, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, // 89
    0x71, 0x49, 0x45, 0x43, 0x00, 0x00, 0x00, 0x00, // 90
    0x7F, 0x41, 0x00, 0x00, // 91
    0x01, 0x06, 0x18, 0x60, 0x00, 0x00, 0x00, 0x00, // 92
    0x41, 0x7F, 0x00, 0x00, // 93
    0x02, 0x01, 0x02, 0x00, 0x00, 0x00, // 94
    0x40, 0x40, 0x40, 0x00, 0x00, 0x00, // 95
    0x03, 0x00, // 96
    0x20, 0x54, 0x54, 0x78, 0x00, 0x00, 0x00, 0x00, // 97
    0x7F, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, 0x00, // 98
    0x38, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00, 0x00, // 99
    0x38, 0x44, 0x44, 0x7F, 0x00, 0x00, 0x00, 0x00, // 100
    0x38, 0x54, 0x54, 0x58, 0x00, 0x00, 0x00, 0x00, // 101
    0x7E, 0x09, 0x01, 0x00, 0x00, 0x00, // 102
    0x38, 0x44, 0x44, 0xF8, 0x80, 0x80, 0x80, 0x00, // 103
    0x7F, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00, // 104
    0x7D, 0x00, // 105
    0x00, 0xFD, 0x80, 0x00, // 106
    0x7F, 0x10, 0x6C, 0x00, 0x00, 0x00, // 107
    0x7F, 0x00, // 108
    0x7C, 0x04, 0x7C, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, // 109
    0x7C, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00, // 110
    0x38, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00, 0x00, // 111
    0xFC, 0x44, 0x44, 0x38, 0x80, 0x00, 0x00, 0x00, // 112
    0x38, 0x44, 0x44, 0xFC, 0x00, 0x00, 0x00, 0x80, // 113
    0x78, 0x04, 0x04, 0x00, 0x00, 0x00, // 114
    0x48, 0x54, 0x54, 0x24, 0x00, 0x00, 0x00, 0x00, // 115
    0x3F, 0x44, 0x40, 0x00, 0x00, 0x00, // 116
    0x3C, 0x40, 0x40, 0x7C, 0x00, 0x00, 0x00, 0x00, // 117
    0x1C, 0x20, 0x40, 0x7C, 0x00, 0x00, 0x00, 0x00, // 118
    0x3C, 0x40, 0x20, 0x40, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, // 119
    0x6C, 0x10, 0x10, 0x6C, 0x00, 0x00, 0x00, 0x00, // 120
    0x3C, 0x40, 0x40, 0xFC, 0x80, 0x80, 0x80, 0x00, // 121
    0x64, 0x54, 0x54, 0x4C, 0x00, 0x00, 0x00, 0x00, // 122
    0x08, 0x36, 0x41, 0x00, 0x00, 0x00, // 123
    0x7F, 0x00, // 124
    0x41, 0x36, 0x08, 0x00, 0x00, 0x00, // 125
    0x01, 0x01, 0x00, 0x00 // 126
};



*
 *
 * SMfont
 * Date                : 1 Juli 2018

//Font Generated by MikroElektronika Creator 1.2.0.0
//MikroElektronika 2011 
//http://www.mikroe.com 

//Designed by MOD Devices GmbH

//GLCD FontName : SMfont
//GLCD FontSize : 3 x 5

 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 *


//THIS VERSION OF THE FONT CONTAINS ALL CAPITAL LETTERS

#define SMFONT_WIDTH 2
#define SMFONT_HEIGHT 4

static const uint8_t SMfont[] = {
    0xB8, 0x01,     // size 
    0x03,           // width
    0x05,           // height
    0x20,           // first char
    0x5F,           // char count


    // char widths
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
    0x03, 0x03, 0x03, 0x03, 0x03,

    0x00, 0x00, 0x00,                  // Code for char  
    0x00, 0x17, 0x00,                  // Code for char !
    0x01, 0x00, 0x01,                  // Code for char "
    0x1F, 0x0A, 0x1F,                  // Code for char #
    0x0A, 0x1F, 0x05,                  // Code for char $
    0x09, 0x04, 0x12,                  // Code for char %
    0x0A, 0x15, 0x1A,                  // Code for char &
    0x03, 0x00, 0x00,                  // Code for char '
    0x0E, 0x11, 0x00,                  // Code for char (
    0x00, 0x11, 0x0E,                  // Code for char )
    0x15, 0x0E, 0x15,                  // Code for char *
    0x04, 0x0E, 0x04,                  // Code for char +
    0x00, 0x10, 0x08,                  // Code for char ,
    0x04, 0x04, 0x04,                  // Code for char -
    0x00, 0x10, 0x00,                   // Code for char .
    0x08, 0x04, 0x02,                  // Code for char /
    0x1F, 0x11, 0x1F,                  // Code for char 0
    0x00, 0x1F, 0x00,                  // Code for char 1
    0x1D, 0x15, 0x17,                  // Code for char 2
    0x15, 0x15, 0x1F,                  // Code for char 3
    0x07, 0x04, 0x1F,                  // Code for char 4
    0x17, 0x15, 0x1D,                  // Code for char 5
    0x1F, 0x15, 0x1D,                  // Code for char 6
    0x01, 0x01, 0x1F,                  // Code for char 7
    0x1F, 0x15, 0x1F,                  // Code for char 8
    0x17, 0x15, 0x1F,                  // Code for char 9
    0x00, 0x0A, 0x00,                  // Code for char :
    0x10, 0x0A, 0x00,                  // Code for char ;
    0x04, 0x0A, 0x11,                  // Code for char <
    0x0A, 0x0A, 0x0A,                  // Code for char =
    0x11, 0x0A, 0x04,                  // Code for char >
    0x01, 0x15, 0x03,                  // Code for char ?
    0x0E, 0x15, 0x16,                  // Code for char @
    0x1E, 0x05, 0x1E,                  // Code for char A
    0x1F, 0x15, 0x0A,                  // Code for char B
    0x0E, 0x11, 0x11,                  // Code for char C
    0x1F, 0x11, 0x0E,                  // Code for char D
    0x1F, 0x15, 0x15,                  // Code for char E
    0x1F, 0x05, 0x05,                  // Code for char F
    0x0E, 0x11, 0x1D,                  // Code for char G
    0x1F, 0x04, 0x1F,                  // Code for char H
    0x00, 0x1F, 0x00,                  // Code for char I
    0x08, 0x10, 0x0F,                  // Code for char J
    0x1F, 0x04, 0x1B,                  // Code for char K
    0x1F, 0x10, 0x10,                  // Code for char L
    0x1F, 0x06, 0x1F,                  // Code for char M
    0x1F, 0x0E, 0x1F,                  // Code for char N
    0x0E, 0x11, 0x0E,                  // Code for char O
    0x1F, 0x05, 0x07,                  // Code for char P
    0x0E, 0x19, 0x1E,                  // Code for char Q
    0x1F, 0x0D, 0x16,                  // Code for char R
    0x12, 0x15, 0x09,                  // Code for char S
    0x01, 0x1F, 0x01,                  // Code for char T
    0x0F, 0x10, 0x1F,                  // Code for char U
    0x0F, 0x10, 0x0F,                  // Code for char V
    0x1F, 0x0C, 0x1F,                  // Code for char W
    0x1B, 0x04, 0x1B,                  // Code for char X
    0x07, 0x1C, 0x07,                  // Code for char Y
    0x19, 0x15, 0x13,                  // Code for char Z
    0x1F, 0x11, 0x00,                  // Code for char [
    0x02, 0x04, 0x08,                  // Code for char BackSlash
    0x00, 0x11, 0x1F,                  // Code for char ]
    0x02, 0x01, 0x02,                  // Code for char ^
    0x04, 0x04, 0x04,                  // Code for char _
    0x00, 0x02, 0x02,                  // Code for char `
    0x1E, 0x05, 0x1E,                  // Code for char A
    0x1F, 0x15, 0x0A,                  // Code for char B
    0x0E, 0x11, 0x11,                  // Code for char C
    0x1F, 0x11, 0x0E,                  // Code for char D
    0x1F, 0x15, 0x15,                  // Code for char E
    0x1F, 0x05, 0x05,                  // Code for char F
    0x0E, 0x11, 0x1D,                  // Code for char G
    0x1F, 0x04, 0x1F,                  // Code for char H
    0x00, 0x1F, 0x00,                  // Code for char I
    0x08, 0x10, 0x0F,                  // Code for char J
    0x1F, 0x04, 0x1B,                  // Code for char K
    0x1F, 0x10, 0x10,                  // Code for char L
    0x1F, 0x06, 0x1F,                  // Code for char M
    0x1F, 0x0E, 0x1F,                  // Code for char N
    0x0E, 0x11, 0x0E,                  // Code for char O
    0x1F, 0x05, 0x07,                  // Code for char P
    0x0E, 0x19, 0x1E,                  // Code for char Q
    0x1F, 0x0D, 0x16,                  // Code for char R
    0x12, 0x15, 0x09,                  // Code for char S
    0x01, 0x1F, 0x01,                  // Code for char T
    0x0F, 0x10, 0x1F,                  // Code for char U
    0x0F, 0x10, 0x0F,                  // Code for char V
    0x1F, 0x0C, 0x1F,                  // Code for char W
    0x1B, 0x04, 0x1B,                  // Code for char X
    0x07, 0x1C, 0x07,                  // Code for char Y
    0x19, 0x15, 0x13,                  // Code for char Z
    0x04, 0x1B, 0x11,                  // Code for char {
    0x00, 0x1F, 0x00,                  // Code for char |
    0x11, 0x1B, 0x04,                  // Code for char }
    0x04, 0x06, 0x02                   // Code for char ~
    };
*/